// Distributed under the MIT software license, see the accompanying
// file LICENSE or http://www.opensource.org/licenses/mit-license.php.

syntax = "proto3";

option go_package = "github.com/theQRL/zond/protos";

package protos;

// This transaction must be rejected if the number of
// Dilithium pks is not proportional to the 10k funds
message Stake {
    uint64 amount = 1;
}

message Transfer {
    bytes to = 1;
    uint64 value = 2;
    bytes data = 3;
}

message CoinBase {
    uint64 block_proposer_reward = 1;
    uint64 attestor_reward = 2;

    uint64 fee_reward = 3;  // TODO: merge multiple rewards into a single reward variable
}

message Transaction {
    uint64 chain_id = 1;
    uint64 nonce = 2;
    bytes pk = 3;
    bytes signature = 4;

    uint64 gas = 5;
    uint64 gas_price = 6;
    bytes hash = 7;

    oneof type {
        Stake stake = 8;
        Transfer transfer = 9;
    }
}

message TransactionList {
    repeated Transaction txs = 1;
}

message ProtocolTransaction {
    uint64 chain_id = 1;
    uint64 nonce = 2;
    bytes pk = 3;
    bytes signature = 4;
    bytes hash = 5;

    oneof type {
        CoinBase coin_base = 6;
        Attest attest = 7;
    }
}

message Attest {
}
